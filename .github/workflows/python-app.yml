# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build


# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  build_test:
    name: ${{ matrix.os }}, ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        backend:
          - skbuild
          - mesonpy
        python-version: [3.7, 3.8, 3.9, 3.10.12]
        mpi: [openmpi]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup MPI (${{ matrix.mpi }})
      uses: mpi4py/setup-mpi@v1
      with:
        mpi: ${{ matrix.mpi }}

    - name: Setup Python (${{ github.event.inputs.py || 3 }})
      uses: actions/setup-python@v4
      with:
        python-version: ${{ github.event.inputs.py || 3 }}
        cache: pip
        cache-dependency-path: |
          conf/requirements-build-cython.txt
          conf/requirements-build-${{ matrix.backend }}.txt

    - name: Upgrade pip
      run:  python -m pip install -U pip

    - name: Install Python packages (build)
      run:  python -m pip install -U build

    - name: Build sdist and wheel (${{ matrix.backend }})
      run:  python -m build
      env:
        MPI4PY_BUILD_BACKEND: ${{ matrix.backend }}
        MPI4PY_LOCAL_VERSION: ${{ matrix.mpi }}

    - name: Upload wheel
      uses: actions/upload-artifact@v3
      with:
        name: mpi4py-${{ matrix.backend }}-${{ matrix.os }}
        path: dist/mpi4py-*.whl

    - name: Install wheel
      run:  python -m pip install mpi4py
              --verbose --no-index --find-links=dist

    - name: Test wheel after install (test_package)
      run:  mpiexec -n 1 python test/main.py test_package

    - name: Test wheel after install (helloworld)
      run:  mpiexec -n 2 python -m mpi4py.bench helloworld

    - name: Uninstall wheel after testing
      run:  python -m pip uninstall mpi4py
              --verbose --yes

    - name: Install package with pip (${{ matrix.backend }})
      run:  python -m pip install .
              --verbose
      env:
        MPI4PY_BUILD_BACKEND: ${{ matrix.backend }}
        MPI4PY_LOCAL_VERSION: ${{ matrix.mpi }}

    - name: Test package after install (test_package)
      run:  mpiexec -n 1 python test/main.py test_package

    - name: Test package after install (helloworld)
      run:  mpiexec -n 2 python -m mpi4py.bench helloworld

    - name: Uninstall package after testing
      run:  python -m pip uninstall mpi4py
              --verbose --yes
